%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: PSL_10337_mu01.dvi
%%BoundingBox: 116 85 656 396
%%DocumentFonts: CMMIB10 CMBX12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Z -E -X 600 -Y 600 -y 1440 -o mu01.eps
%+ PSL_10337_mu01.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2007.06.26:1404
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 86 /V put
dup 101 /e put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2BFDE813
E71A29FD148B9DBEFCB126CDF69A9EEB2234591C11FDE24E4612BF4146B0910B
C8DC0BFA609306BE4FD750771A94C570F19F1B33ACCC3C304DDC18B3EC99FA47
2623E7F5520C3A33DB80D31F2A0A356936FA8E54847B51C1DB7B77C66FBBBDC7
852DC9F536F691F62F18F6E7F80F8C76D76AC40F871F324DDD8C38F25F6AC1A2
00961A1CF50A49F80967187CE81A739EA7A3BFC4C5E803CD27DB4569CC7DA5FA
7A9C212609EFE24FABBC0F7DBA2AC6D57166C10B32C64F98D785340283328376
1327FDFD361991F76D4CA469DB8C57224C4F320D50A8753AAFBA46928DE8E687
F583D2159698B6B537639A2AE09FD666A023E7398EAF1E1F3240CE703896F3D2
E37385740FDC899CE9C0005BF2D56C23F33A5E8613AD595A528FA4D5A1FCB590
F4C468B014680F9176D494343C3E3043B7F84588A4A8DE767518B7460479536E
AD5969B8123C5C7688EB754A13780C4A2DFBF386C268C651F66B7A5A3E1D741D
CAF0E8CDCED96F9ABEEBCDD8553E9BCA1129B5866BDFE23A811F0FBE505F5359
73F17A1E3A97846AE0AA56467CC65EA1C27253DBAB317D0EE684291572B18343
8F786F02F8CDADC86AFFA4AB5CDECEE921CBAEC655152438BF61F1EB1AEA15E9
AAA0826FF83D70C266A7912001C1E5FE8D706006BFF3CE5E565506E2550826CA
B8F63D2145B1AF5FC0CABB03D11CF9C51F4E90EE639FAB15AD0163C576EC6C03
C3D5697ED20D7AE44272573C66D45961489AE1FB3A47B74F8B8BDD7EDA6054D8
E8FD3B3E7F5CD812C8D1CD7C53B07B724496BD793B166AF18DC566117E707A7A
31C7BE3A5FB3A9C097CE9777D1498B88E2F154A8E214F36A3DCA3C7B3F6BAEC7
651DE072D9FFFEFB532C394F1C57E89B83F62BA29B135667F8E972B53A4375EB
CE405E0148B56C8ABC3C143536C046AF99187B6C64EAC3A5C0BF91E486471E2E
DE82E2AA2D6077FD9545DA8CCB361DB61E3C90D6D48F743E47E5EC6B03969621
457E583D3F43626BC0007C9721C75E26B5130312B6F75E8E7610E63B6A0FFFE0
80405182A84ABE2BEF4A9603FC8ED3714F8F4D500D8A53FC6F8113A2B572D699
64201F4C748E649CA8ED45C1924994A7245D42B5107ABBB6BF774F0FAAE0CEA5
E9B25A28AA0E7C6F31EFA353E177363C516A7BD118FE054AA77F610029A4ADB3
0EFC0A48FA155C9804587C57ED81A2F3DD148B3B5A876CBE29D221464B5EBF56
48F626BFDC56EAA7DF604CD9F1FD985F1BAA99CB501E6CFA9AA8BC25FDEC9A85
A978E3693E525EE047117DE8EDE2D504D3107DCB623A750BCADACD18999A887A
70620C889814E70BB9C8B8ED905C069E669340A176189F10F0658CE12E112BDC
88F33E71B2FD04F2720797674C10F26EEE698EDC2A0CF5BF2F1AACB25B36DB3C
0B836620FB7D45AE74C16277C3C906D4515BE1EBB2885EEAB00606F098012824
98FE5585C0A16959557E72DC35B69DC3B2082BB74D3995DA30891B8A650FE668
A1DFC7C73ED0071A18DFF9D31CF3CC7DF30315AD516E76D5CDE0EB65A814DEF8
243871FA3EEC45182E5BC33D6372BA052A71614C491612AF437B6B0F36FCDACE
DDEB8FA7BDACB03EE57690E9ACF76307C2BFA127680B9C6D791FDE477C2624DA
8AEB7B176A87A19F28324F80063D349E575A0C63FAE5E7DD516F37E2340C987B
521656F083FE8E82DB92F98F3BB29DC6C83871112EBA2A16D31D73479C898D41
203B60B59452E76E0DA495E521CEB3E47DB655FEB2A8FE2BCDB8072555D685A7
CBD907650D64679CBF3462BE4CAB72CFD08219C5802C8D9822C2A249080E1DE0
1013818E326D077FEE119E5244FC9D6AC4F81C73B6E27390C42D9E03846E7FCC
2FD436A11723EF1E02974FFFBC191BD8B209B35EBAD53ACFCE30671EB3D6C104
FD69F203D943544856B3B05E4B4684EEB0F519A83DE2EAB78CA3C4B16D10A3E8
38F0C516395B748E690A725B486D3D59F1A971AEBF8B28C62AB1602632C83672
24DD19B879C4B23F3B3393DBA6E46293F69FD7608B7E819948462BFDE7F69B3D
BAD072798A9E54CB26F3A0784B77C77D9A1B31DEA62FF336423A90AA070D2173
686B858E0107181993508F42400008B872771BCDC585830F177025D1031A280A
21E38E49194737DFE602BA8A5767C21107B94439CE7F0E20D43CB60342D8E5FF
8BABB1AD78E226253D5AB0618C0900C3ACEBEA2E6E39DD18365E9F43C91A90E7
799105C8A1B0A11F556B73CF1000C7366077C9769F15685D0CDB5B34FBD94A5B
15188ACE2B4A3F0F6814A601A36FB3973F472F3C501C7E6910C16ECA7E4163E9
3BA3930F84B35D9C8B426B8602AA5533137CAC6781C84A07D2A4D05384D7BABD
6A2954AFC323B091B35F0EA9851AFF5E4EAE627A664C0B513C7686A35346BA35
B43109589D4DE07DD0EDD5E044FD36ABE34BDA078A2A85AE430C74BE01BE89F0
4EED1F96156E9FC8C44061E9EE4FFD7FBF86505756162EF3F71F2FE3B3515664
F3BD4473622E350ADA97B54C767CEB6405FCBA4D0249529263EE6270395C4944
4A4FB43FFDB2EF3F72CB1532B92A532BFEA1FD1F766C0796D4AAA2B54E5B7110
8E8CE1194A2D0E7E1BD557D5AE2DF02BF2911097FE9B84B3AD10501454579A20
91AF97C24BDBA32B08E67FE0043120D6284942600B44BDE5E74FF965B5DA9BF2
B95DF64AF8DCAF1DEB77F1B7CD1BAAEB6473347853BA856DBEAFA75ED269FC3B
94D94A22656CC135B31D5E9790AE7871AA2F34C29BAE6D9C75CAD5646C16EC7F
E8E19C34D5FCC36E5A96A669D5E3752FA4F2947CE90107E61D7421A5777F293F
EEFEE40327CF711DF4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMIB10
%!PS-AdobeFont-1.1: CMMIB10 1.100
%%CreationDate: 1996 Jul 23 07:54:00
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMIB10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMIB10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /mu put
dup 69 /E put
readonly def
/FontBBox{-15 -250 1216 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D004B836D34E88C25F6CE738846C8E2E59A2BCF
4ACF80A26D78872E9343A0537BC3BD7715F32ACD958D5AAED865BFE129278935
063A31C2634DE2F9077E0AAAAEB224466B779096D8E3FF0A12AD5157F6603DED
1A82F3511359143311179080C510740B401C930C96270FD1AB3ECBCFEF5DE53F
E846BAAE95828D5790922640EF8AB9D7CEBE7669FEA02B72F86872D3D8754A18
A1629C40A7C00C956F140BC63362478279C36EE353638CD3E249897207A94504
4400668C8E702058EBF7284C9BDF830A3FC79C7EE900CC4C3664F9767A237275
CEE3671644A75F1E696DA906B4C66870DBE87F5B4A176920C078ADBE24F55C09
3D18CDE21B5FBC1C6A8AB18E05EDBEF9D1C1C18B3E6377BA2A688579D4F708F9
A5CF4F56C5E39E2726106E9713E638775E606464CD674E5DC25CE9A696A65806
C8E9D206B421E246F18013ACC6C7B2985BA93B1B7D7745CCB25B09957F50128C
B523A55ACA6A7A2A0193A536E590291ED9D577B527CAD0372E05BFCA1829FED1
662D06144A5FFA628C587A4FA05B179F1A7E3B23B47765FDC054271A0DBF9C2B
B4F4771F80D1F7AAD9024868C30DAD5CF728DB2A71D86D53B0E674996E8C01F7
EF97B225A28872F8AD4752A466E078C2B020EB832F237CB9B5631EB2D2EDDB00
709D3864CA3A6C3EF18085EAEABC011E9F35C9BE4B5D0B608361F329B5784DAC
5557A602E9E3C204909D84DB988F0BAB914E87CD685C7DA55C5E0B9F0176184F
FC39B570873BBF346A0D1DE3942DA05434949A65CE64D8BAB0A091C40F7FF47A
4FC57CB4420221C7B3EB8B891044B5FB0227009F0F6028D3F28545E63DA68A04
E993D5A48AF0019A459ECEEF206751DABED14CCD5E802BB156C6E73039E2F6E2
B33EA725041088329C315B8514374E2B710E57FBA31C576BB99674E1C8C1D695
BC5EC30E3F23DEF70D12764920FE3485FA2CF1985053E5C4DE3E91BB9B26BD8D
ADA6788873147AE836C09505F8E4A3CA0B82095060C6626FCDCC626A530AA4C0
ED8D8C0531ABB1519520A4CE0FEDEE4CCD6EF41EF646B6CFA94CC8C169B1F347
8E29E8017BB74B38D67E97F0D105BBC3D7B9CE67802B8B875B5491940C28264C
559EA57688D0DCACD60C9D581F7D6304CBAC3B6DB2159252FA6818CA15C3B07D
C73CF47A65999880421527D46FDB5C36551B242032C7CA97EBF60B326EC80B61
7B33677AE165C3D8CE5D2DF91433D31A9383DB98ED28D3565C385BCA332B8218
D59CA0C4FBDABBEB020720691DA8262373CFB61653E20344E588225C0CDD764C
872446668F2863B2A6F9376F096C3BDD89D1E405E428B4BFD25997ABB3496850
B4E153D1EBA4399025E720DB054B544518634AEFAFCAEE61E55895AC34242E2B
81758B376DADC33AA6FF2998121637002DE351A766CF86F1ACF985BB0F1C7B25
8544E7F500660F79544458A27E4B940120125C7C81B968B487328A454CA69B61
86B8A544A751509292F5C221C1BEE71322884B748A9504B870E37680D64873FA
AE0A9055D72BE3B15E0F05F23FE49E2770934506EC0C738457541BD1402EC9E0
1CEA6057555F09479AB39DD753CB6A619BC8103C6F1BAC676448263A27027E50
36B6C5F828D3CCC4AF069D5A414641696DDDB2F7CC54DBFE360330ABEA2D4C83
615EC131AD19AC445B040F6BF271B4EBF74E4EEB0A57D7442A14239250698823
CDC7F9505D6A30C786A3318AE3DE7E6BDDA0F5D121FC987469E3640A6FB13BF5
2C5489AF08365A1307A6D16A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1440 600 600 (PSL_10337_mu01.dvi)
@start /Fa 154[88 14[146 30[97 97 97 97 97 97 97 97 1[54
4[75 75 40[{}13 172.154 /CMBX12 rf /Fb 186[139 46[122
22[{}2 172.154 /CMMIB10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black Black 466 5220 a @beginspecial
@setspecial
 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10.0 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def
/vpt vpt_ def /Rounded false def /M {moveto} bind def /L {lineto} bind
def /R {rmoveto} bind def /V {rlineto} bind def /N {newpath moveto}
bind def /C {setrgbcolor} bind def /f {rlineto fill} bind def /vpt2
vpt 2 mul def /hpt2 hpt 2 mul def /Lshow { currentpoint stroke M  
0 vshift R show } def /Rshow { currentpoint stroke M   dup stringwidth
pop neg vshift R show } def /Cshow { currentpoint stroke M   dup stringwidth
pop -2 div vshift R show } def /UP { dup vpt_ mul /vpt exch def hpt_
mul /hpt exch def   /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def /DL
{ Color {setrgbcolor Solid {pop []} if 0 setdash }  {pop pop pop 0
setgray Solid {pop []} if 0 setdash} ifelse } def /BL { stroke userlinewidth
2 mul setlinewidth       Rounded { 1 setlinejoin 1 setlinecap } if
} def /AL { stroke userlinewidth 2 div setlinewidth       Rounded {
1 setlinejoin 1 setlinecap } if } def /UL { dup gnulinewidth mul /userlinewidth
exch def       dup 1 lt {pop 1} if 10 mul /udl exch def } def /PL {
stroke userlinewidth setlinewidth       Rounded { 1 setlinejoin 1 setlinecap
} if } def /LTw { PL [] 1 setgray } def /LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0
{ PL [] 0 0 1 DL } def /LT1 { PL [] 1 0 0 DL } def /LT2 { PL [] 0 0
0 DL } def /LT3 { PL [] 1 0 1 DL } def /LT4 { PL [] 0 0.5 0 DL } def
/LT5 { PL [4 dl 2 dl] 0 0 1 DL } def /LT6 { PL [4 dl 2 dl] 1 0 0 DL
} def /LT7 { PL [] 0.88 0.88 0.88 DL } def /LT8 { PL [] 0 3 0.3 0.9
DL } def /Pnt { stroke [] 0 setdash    gsave 1 setlinecap M 0 0 V stroke
grestore } def /Dia { stroke [] 0 setdash 2 copy vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def /Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint
stroke M   hpt neg vpt neg R hpt2 0 V stroke   } def /Box { stroke
[] 0 setdash 2 copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke   Pnt } def /Crs { stroke
[] 0 setdash exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint
stroke M   hpt2 neg 0 R hpt2 vpt2 V stroke } def /TriU { stroke []
0 setdash 2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt
2 mul 0 V   hpt neg vpt 1.62 mul V closepath stroke   Pnt  } def /Star
{ 2 copy Pls Crs } def /BoxF { stroke [] 0 setdash exch hpt sub exch
vpt add M   0 vpt2 neg V  hpt2 0 V  0 vpt2 V   hpt2 neg 0 V  closepath
fill } def /TriUF { stroke [] 0 setdash vpt 1.12 mul add M   hpt neg
vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath
fill } def /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M  
hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke   Pnt  } def /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
closepath fill} def /DiaF { stroke [] 0 setdash vpt add M   hpt neg
vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill }
def /Pent { stroke [] 0 setdash 2 copy gsave   translate 0 hpt M 4
{72 rotate 0 hpt L} repeat   closepath stroke grestore Pnt } def /PentF
{ stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt
L} repeat   closepath fill grestore } def /Circle { stroke [] 0 setdash
2 copy   hpt 0 360 arc stroke Pnt } def /CircleF { stroke [] 0 setdash
hpt 0 360 arc fill } def /C0 { BL [] 0 setdash 2 copy moveto vpt 90
450  arc } bind def /C1 { BL [] 0 setdash 2 copy        moveto    
   2 copy  vpt 0 90 arc closepath fill                vpt 0 360 arc
closepath } bind def /C2 { BL [] 0 setdash 2 copy moveto        2 copy
 vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C3 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0
180 arc closepath fill                vpt 0 360 arc closepath } bind
def /C4 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 270
arc closepath fill                vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 0 90 arc   
    2 copy moveto        2 copy  vpt 180 270 arc closepath fill   
            vpt 0 360 arc } bind def /C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill               vpt 0 360
arc closepath } bind def /C7 { BL [] 0 setdash 2 copy moveto      
2 copy  vpt 0 270 arc closepath fill               vpt 0 360 arc closepath
} bind def /C8 { BL [] 0 setdash 2 copy moveto       2 copy vpt 270
360 arc closepath fill               vpt 0 360 arc closepath } bind
def /C9 { BL [] 0 setdash 2 copy moveto       2 copy  vpt 270 450 arc
closepath fill               vpt 0 360 arc closepath } bind def /C10
{ BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto        2 copy vpt 90 180 arc closepath fill  
             vpt 0 360 arc closepath } bind def /C11 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 0 180 arc closepath fill        2
copy moveto        2 copy  vpt 270 360 arc closepath fill         
      vpt 0 360 arc closepath } bind def /C12 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 180 360 arc closepath fill              
 vpt 0 360 arc closepath } bind def /C13 { BL [] 0 setdash  2 copy
moveto        2 copy  vpt 0 90 arc closepath fill        2 copy moveto
       2 copy  vpt 180 360 arc closepath fill                vpt 0
360 arc closepath } bind def /C14 { BL [] 0 setdash 2 copy moveto 
      2 copy  vpt 90 360 arc closepath fill                vpt 0 360
arc } bind def /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /Rec   { newpath
4 2 roll moveto 1 index 0 rlineto 0 exch rlineto        neg 0 rlineto
closepath } bind def /Square { dup Rec } bind def /Bsquare { vpt sub
exch vpt sub exch vpt2 Square } bind def /S0 { BL [] 0 setdash 2 copy
moveto 0 vpt rlineto BL Bsquare } bind def /S1 { BL [] 0 setdash 2
copy vpt Square fill Bsquare } bind def /S2 { BL [] 0 setdash 2 copy
exch vpt sub exch vpt Square fill Bsquare } bind def /S3 { BL [] 0
setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill
Bsquare } bind def /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill Bsquare } bind def /S7 { BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt vpt2 Rec fill        2 copy vpt Square fill        Bsquare
} bind def /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare
} bind def /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare
} bind def /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2
copy exch vpt sub exch vpt Square fill        Bsquare } bind def /S11
{ BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub
exch vpt2 vpt Rec fill        Bsquare } bind def /S12 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec
fill        2 copy vpt Square fill Bsquare } bind def /S14 { BL []
0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill      
 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def /S15 {
BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def /D0 { gsave
translate 45 rotate 0 0 S0 stroke grestore } bind def /D1 { gsave translate
45 rotate 0 0 S1 stroke grestore } bind def /D2 { gsave translate 45
rotate 0 0 S2 stroke grestore } bind def /D3 { gsave translate 45 rotate
0 0 S3 stroke grestore } bind def /D4 { gsave translate 45 rotate 0
0 S4 stroke grestore } bind def /D5 { gsave translate 45 rotate 0 0
S5 stroke grestore } bind def /D6 { gsave translate 45 rotate 0 0 S6
stroke grestore } bind def /D7 { gsave translate 45 rotate 0 0 S7 stroke
grestore } bind def /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore
} bind def /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore }
bind def /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore }
bind def /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore }
bind def /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore }
bind def /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore }
bind def /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore }
bind def /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore }
bind def /DiaE { stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath stroke } def /BoxE
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2
0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke } def /TriUE { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath stroke } def /TriDE { stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath stroke } def /PentE { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def /CircE { stroke [] 0 setdash   hpt
0 360 arc stroke } def /Opaque { gsave closepath 1 setgray fill grestore
0 setgray closepath } def /DiaW { stroke [] 0 setdash vpt add M   hpt
neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque stroke
} def /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2
neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke } def /TriUW {
stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke } def /TriDW {
stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke } def /PentW { stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def /CircW { stroke [] 0 setdash   hpt 0
360 arc Opaque stroke } def /BoxFill { gsave Rec 1 setgray fill grestore
} def /BoxColFill {   gsave Rec   /Fillden exch def   currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def   /ColR ColR Fillden
mul Fillden sub 1 add def   /ColG ColG Fillden mul Fillden sub 1 add
def   /ColB ColB Fillden mul Fillden sub 1 add def   ColR ColG ColB
setrgbcolor   fill grestore } def /PatternFill { gsave /PFa [ 9 2 roll
] def     PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add
translate     PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get
Rec     gsave 1 setgray fill grestore clip     currentlinewidth 0.5
mul setlinewidth     /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt
def     0 0 M PFa 5 get rotate PFs -2 div dup translate 0 1 PFs PFa
4 get div 1 add floor cvi { PFa 4 get mul 0 M 0 PFs V } for     0 PFa
6 get ne { 0 1 PFs PFa 4 get div 1 add floor cvi { PFa 4 get mul 0
2 1 roll M PFs 0 V } for     } if     stroke grestore } def /Symbol-Oblique
/Symbol findfont [1 0 .167 1 0 0] makefont dup length dict begin {1
index /FID eq {pop pop} {def} ifelse} forall currentdict end definefont
pop end gnudict begin gsave 0 0 translate 0.100 0.100 scale 0 setgray
newpath 1.000 UL LTb 350 520 M 63 0 V 1.000 UL LTb 350 870 M 63 0 V
1.000 UL LTb 350 1220 M 63 0 V 1.000 UL LTb 350 1570 M 63 0 V 1.000
UL LTb 350 1920 M 63 0 V 1.000 UL LTb 350 310 M 0 63 V 1.000 UL LTb
793 310 M 0 63 V 1.000 UL LTb 1236 310 M 0 63 V 1.000 UL LTb 1679 310
M 0 63 V 1.000 UL LTb 2121 310 M 0 63 V 1.000 UL LTb 2564 310 M 0 63
V 1.000 UL LTb 3007 310 M 0 63 V 1.000 UL LTb 3450 310 M 0 63 V 1.000
UL LTb 1.000 UL LTb 350 310 M 3100 0 V 0 1750 R -3100 0 R 350 310 L
LTb LTb 1.000 UP 3.000 UL LT0 350 458 M 8 -1 V 23 -2 V 21 -2 V 23 -2
V 22 -2 V 22 -2 V 23 -2 V 21 -2 V 23 -1 V 22 -2 V 22 -2 V 22 -2 V 22
-2 V 22 -1 V 22 -2 V 22 -2 V 22 -1 V 22 -1 V 21 -1 V 23 0 V 22 -1 V
1 -2 V 2 0 V 2 1 V 2 2 V 2 1 V 2 1 V 1 0 V 1 0 V 2 1 V 2 0 V 2 1 V
1 0 V 2 1 V 2 0 V 2 1 V 2 1 V 2 1 V 1 1 V 2 2 V 2 2 V 2 4 V 1 5 V 2
6 V 2 9 V 2 9 V 2 6 V 2 5 V 1 4 V 1 4 V 2 5 V 2 3 V 2 4 V 1 7 V 2 8
V 2 14 V 2 20 V 2 21 V 2 24 V 1 24 V 1 33 V 3 51 V 2 49 V 1 49 V 2
43 V 1 38 V 2 53 V 2 44 V 2 40 V 2 36 V 1 32 V 2 48 V 2 62 V 2 64 V
1 63 V 2 53 V 1 56 V 2 58 V 3 41 V 1 30 V 2 24 V 1 22 V 2 34 V 2 44
V 2 42 V 2 35 V 1 26 V 2 21 V 2 3 V 2 -17 V 2 -31 V 1 -34 V 2 -36 V
1 -59 V 2 -49 V 2 -44 V 2 -35 V 1 -27 V 2 -29 V 2 -27 V 2 -17 V 2 -14
V 1 -11 V 2 -10 V stroke 945 1375 M 2 -15 V 2 -13 V 2 -11 V 1 -9 V
2 -7 V 2 -8 V 2 -6 V 2 -2 V 1 -1 V 2 0 V 1 3 V 2 7 V 2 9 V 2 8 V 1
10 V 2 9 V 2 13 V 2 9 V 2 7 V 1 3 V 2 0 V 1 -1 V 3 -6 V 2 -7 V 1 -9
V 2 -7 V 1 -10 V 2 -13 V 2 -11 V 1 -5 V 5 -22 V 5 -23 V 5 -15 V 6 -11
V 5 -7 V 5 -5 V 6 -2 V 6 1 V 6 5 V 5 8 V 6 9 V 7 10 V 5 10 V 7 16 V
6 26 V 6 31 V 7 31 V 6 26 V 6 18 V 7 11 V 7 4 V 7 -2 V 7 -10 V 7 -19
V 8 -19 V 7 -18 V 6 -16 V 8 -14 V 8 -14 V 8 -13 V 7 -11 V 8 -10 V 8
-6 V 8 -2 V 8 4 V 8 5 V 8 6 V 8 5 V 9 1 V 9 -2 V 8 -2 V 9 1 V 9 2 V
8 5 V 9 6 V 9 7 V 10 3 V 9 -2 V 9 -7 V 10 -10 V 9 -11 V 10 -13 V 10
-11 V 9 -8 V 10 -1 V 10 7 V 10 8 V 10 10 V 10 8 V 11 4 V 10 -1 V 10
-2 V 11 -3 V 10 -1 V 11 1 V 10 2 V 11 1 V 11 1 V 11 -1 V 11 -3 V 12
-5 V 11 -7 V 11 -9 V 11 -10 V stroke 1608 1257 M 12 -10 V 11 -9 V 12
-9 V 12 -6 V 12 -2 V 11 0 V 12 3 V 12 4 V 12 4 V 13 4 V 12 3 V 12 1
V 12 0 V 13 0 V 13 -2 V 12 -2 V 13 -2 V 14 -4 V 12 -3 V 13 -4 V 13
-5 V 13 -4 V 13 -4 V 14 -4 V 13 -2 V 14 -2 V 13 -3 V 14 -3 V 14 -2
V 14 -3 V 14 -3 V 14 -1 V 15 -2 V 13 -1 V 14 0 V 15 -1 V 14 0 V 15
-1 V 15 -2 V 14 -2 V 15 -3 V 14 -3 V 16 -5 V 15 -4 V 15 -4 V 15 -4
V 15 -3 V 15 -2 V 16 -2 V 16 1 V 15 -5 V 16 -2 V 15 -2 V 16 -1 V 16
-1 V 16 -1 V 16 -2 V 16 -1 V 17 -2 V 16 -2 V 16 -2 V 16 -2 V 18 -3
V 16 -4 V 17 -3 V 16 -4 V 17 -3 V 18 -3 V 16 -3 V 17 -2 V 18 -2 V 16
-2 V 18 -2 V 18 -3 V 17 -2 V 17 -2 V 18 -2 V 17 -2 V 19 -3 V 18 -3
V 17 0 V 18 -3 V 19 -2 V 17 -1 V 19 -3 V 18 -2 V 19 -3 V 17 -3 V 20
-2 V 19 -3 V 18 -3 V 19 -2 V 19 -3 V 19 -2 V 19 -3 V 19 -2 V 19 -3
V 20 -2 V 19 -2 V 19 -3 V 20 -2 V 20 -3 V 20 -1 V 20 -3 V stroke 3238
1022 M 20 -2 V 20 -2 V 21 -3 V 21 -2 V 20 -3 V 21 -2 V 21 -3 V 20 -2
V 21 -3 V 22 -3 V 5 0 V 1.000 UL LTb 350 310 M 3100 0 V 0 1750 R -3100
0 R 350 310 L 1.000 UP stroke grestore end showpage
 
@endspecial 2463 5203 a Fb(E)42 b Fa(\(eV\))586
3798 y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg
exch translate
 586 3798 a 376 3755 a Fb(\026)p Fa(\()p Fb(E)9
b Fa(\))586 3798 y
 currentpoint grestore moveto
 586 3798 a 4445 5024 a Fa(7700)-920
b(7600)h(7500)f(7400)i(7300)e(7200)g(7100)h(7000)579
2972 y(2.0)579 3392 y(1.5)579 3812 y(1.0)579 4232 y(0.5)579
4652 y(0.0)p Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
