%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: PSL16537.dvi
%%BoundingBox: 110 85 655 405
%%DocumentFonts: Symbol Times-Italic Times-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Z -E -y 1440 -o mu_norm.eps PSL16537.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.06.16:1215
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 40258437 52099154 1440.5 600 600 (PSL16537.dvi)
@start
%DVIPSBitmapFont: Fa cmr10 17.286 2
/Fa 2 42 df<ED0780150FED1F00153E157E5D4A5A4A5A4A5A4A5A4A5AA24AC7FC147E14
FE5C495A13035C13075C130F5C131F5C133F91C8FC5BA213FEA2485AA312035B1207A25B
A2120FA25B121FA4485AA6127F5BA712FFB3A4127FA77F123FA66C7EA4120F7FA21207A2
7FA212037F1201A36C7EA2137FA27F80131F80130F8013078013038013016D7E80147E80
6E7EA26E7E6E7E6E7E6E7E6E7E157E153EED1F80150F1507219072EB38>40
D<127012F8127C7E123F6C7E6C7E6C7E6C7E6C7E6C7EA2137E7F80131F6D7E8013078013
0380130180130080147E147FA26E7EA26E7EA381140F81A21407A281A2140381A46E7EA6
8180A71680B3A41600A75C5DA64A5AA45D1407A25DA2140FA25D141F5DA34A5AA24AC7FC
A2147E14FE5C13015C13035C13075C130F5C495A133F91C8FC137E5BA2485A485A485A48
5A485A48C9FC123E5A5A1270219078EB38>I E
%EndDVIPSBitmapFont
/Fb 154[64 14[104 29[72 72 72 72 72 72 72 72 72 1[36
46[{TeXBase1Encoding ReEncodeFont}12 143.512 /Times-Roman
rf /Fd 186[88 69[{TeXBase1Encoding ReEncodeFont}1 143.512
/Times-Italic rf /Fe 146[83 109[{.167 SlantFont}1 143.512
/Symbol rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
1 0 bop Black Black Black 466 5222 a @beginspecial @setspecial
 /gnudict 256 dict def gnudict begin /Color true def /Solid false def
/gnulinewidth 5.000 def /userlinewidth gnulinewidth def /vshift -33
def /dl {10.0 mul} def /hpt_ 31.5 def /vpt_ 31.5 def /hpt hpt_ def
/vpt vpt_ def /Rounded false def /M {moveto} bind def /L {lineto} bind
def /R {rmoveto} bind def /V {rlineto} bind def /N {newpath moveto}
bind def /C {setrgbcolor} bind def /f {rlineto fill} bind def /vpt2
vpt 2 mul def /hpt2 hpt 2 mul def /Lshow { currentpoint stroke M  
0 vshift R show } def /Rshow { currentpoint stroke M   dup stringwidth
pop neg vshift R show } def /Cshow { currentpoint stroke M   dup stringwidth
pop -2 div vshift R show } def /UP { dup vpt_ mul /vpt exch def hpt_
mul /hpt exch def   /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def /DL
{ Color {setrgbcolor Solid {pop []} if 0 setdash }  {pop pop pop 0
setgray Solid {pop []} if 0 setdash} ifelse } def /BL { stroke userlinewidth
2 mul setlinewidth       Rounded { 1 setlinejoin 1 setlinecap } if
} def /AL { stroke userlinewidth 2 div setlinewidth       Rounded {
1 setlinejoin 1 setlinecap } if } def /UL { dup gnulinewidth mul /userlinewidth
exch def       dup 1 lt {pop 1} if 10 mul /udl exch def } def /PL {
stroke userlinewidth setlinewidth       Rounded { 1 setlinejoin 1 setlinecap
} if } def /LTw { PL [] 1 setgray } def /LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def /LT0
{ PL [] 0 0 1 DL } def /LT1 { PL [] 1 0 0 DL } def /LT2 { PL [] 0 0
0 DL } def /LT3 { PL [] 1 0 1 DL } def /LT4 { PL [] 0 0.5 0 DL } def
/LT5 { PL [4 dl 2 dl] 0 0 1 DL } def /LT6 { PL [4 dl 2 dl] 1 0 0 DL
} def /LT7 { PL [] 0.85 0.85 0.85 DL } def /LT8 { PL [4 dl 2 dl] 0
0 0 DL } def /LT9 { PL [] 0 3 0.3 0.3 DL } def /Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def /Dia { stroke []
0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt
vpt V hpt neg vpt V closepath stroke   Pnt } def /Pls { stroke [] 0
setdash vpt sub M 0 vpt2 V   currentpoint stroke M   hpt neg vpt neg
R hpt2 0 V stroke   } def /Box { stroke [] 0 setdash 2 copy exch hpt
sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V
closepath stroke   Pnt } def /Crs { stroke [] 0 setdash exch hpt sub
exch vpt add M   hpt2 vpt2 neg V currentpoint stroke M   hpt2 neg 0
R hpt2 vpt2 V stroke } def /TriU { stroke [] 0 setdash 2 copy vpt 1.12
mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62
mul V closepath stroke   Pnt  } def /Star { 2 copy Pls Crs } def /BoxF
{ stroke [] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V  hpt2
0 V  0 vpt2 V   hpt2 neg 0 V  closepath fill } def /TriUF { stroke
[] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul
0 V   hpt neg vpt 1.62 mul V closepath fill } def /TriD { stroke []
0 setdash 2 copy vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt
2 mul 0 V   hpt neg vpt -1.62 mul V closepath stroke   Pnt  } def /TriDF
{ stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V 
 hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath fill} def /DiaF
{ stroke [] 0 setdash vpt add M   hpt neg vpt neg V hpt vpt neg V 
 hpt vpt V hpt neg vpt V closepath fill } def /Pent { stroke [] 0 setdash
2 copy gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat   closepath
stroke grestore Pnt } def /PentF { stroke [] 0 setdash gsave   translate
0 hpt M 4 {72 rotate 0 hpt L} repeat   closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy   hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def /C0 { BL []
0 setdash 2 copy moveto vpt 90 450  arc } bind def /C1 { BL [] 0 setdash
2 copy        moveto        2 copy  vpt 0 90 arc closepath fill   
            vpt 0 360 arc closepath } bind def /C2 { BL [] 0 setdash
2 copy moveto        2 copy  vpt 90 180 arc closepath fill        
       vpt 0 360 arc closepath } bind def /C3 { BL [] 0 setdash 2 copy
moveto        2 copy  vpt 0 180 arc closepath fill                vpt
0 360 arc closepath } bind def /C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill                vpt 0
360 arc closepath } bind def /C5 { BL [] 0 setdash 2 copy moveto  
     2 copy  vpt 0 90 arc        2 copy moveto        2 copy  vpt 180
270 arc closepath fill                vpt 0 360 arc } bind def /C6
{ BL [] 0 setdash 2 copy moveto       2 copy  vpt 90 270 arc closepath
fill               vpt 0 360 arc closepath } bind def /C7 { BL [] 0
setdash 2 copy moveto       2 copy  vpt 0 270 arc closepath fill  
            vpt 0 360 arc closepath } bind def /C8 { BL [] 0 setdash
2 copy moveto       2 copy vpt 270 360 arc closepath fill         
     vpt 0 360 arc closepath } bind def /C9 { BL [] 0 setdash 2 copy
moveto       2 copy  vpt 270 450 arc closepath fill               vpt
0 360 arc closepath } bind def /C10 { BL [] 0 setdash 2 copy 2 copy
moveto vpt 270 360 arc closepath fill        2 copy moveto        2
copy vpt 90 180 arc closepath fill                vpt 0 360 arc closepath
} bind def /C11 { BL [] 0 setdash 2 copy moveto        2 copy  vpt
0 180 arc closepath fill        2 copy moveto        2 copy  vpt 270
360 arc closepath fill                vpt 0 360 arc closepath } bind
def /C12 { BL [] 0 setdash 2 copy moveto        2 copy  vpt 180 360
arc closepath fill                vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto        2 copy  vpt 0 90 arc closepath
fill        2 copy moveto        2 copy  vpt 180 360 arc closepath
fill                vpt 0 360 arc closepath } bind def /C14 { BL []
0 setdash 2 copy moveto        2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def /C15 { BL [] 0 setdash 2 copy
vpt 0 360 arc closepath fill                vpt 0 360 arc closepath
} bind def /Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch
rlineto        neg 0 rlineto closepath } bind def /Square { dup Rec
} bind def /Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind
def /S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare }
bind def /S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind
def /S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill
Bsquare } bind def /S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2
vpt Rec fill Bsquare } bind def /S4 { BL [] 0 setdash 2 copy exch vpt
sub exch vpt sub vpt Square fill Bsquare } bind def /S5 { BL [] 0 setdash
2 copy 2 copy vpt Square fill        exch vpt sub exch vpt sub vpt
Square fill Bsquare } bind def /S6 { BL [] 0 setdash 2 copy exch vpt
sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def /S7 { BL [] 0
setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill        2
copy vpt Square fill        Bsquare } bind def /S8 { BL [] 0 setdash
2 copy vpt sub vpt Square fill Bsquare } bind def /S9 { BL [] 0 setdash
2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def /S10 { BL [] 0
setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt
Square fill        Bsquare } bind def /S11 { BL [] 0 setdash 2 copy
vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def /S12 { BL [] 0 setdash 2 copy exch vpt sub
exch vpt sub vpt2 vpt Rec fill Bsquare } bind def /S13 { BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill        2 copy vpt
Square fill Bsquare } bind def /S14 { BL [] 0 setdash 2 copy exch vpt
sub exch vpt sub vpt2 vpt Rec fill        2 copy exch vpt sub exch
vpt Square fill Bsquare } bind def /S15 { BL [] 0 setdash 2 copy Bsquare
fill Bsquare } bind def /D0 { gsave translate 45 rotate 0 0 S0 stroke
grestore } bind def /D1 { gsave translate 45 rotate 0 0 S1 stroke grestore
} bind def /D2 { gsave translate 45 rotate 0 0 S2 stroke grestore }
bind def /D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind
def /D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def /D6
{ gsave translate 45 rotate 0 0 S6 stroke grestore } bind def /D7 {
gsave translate 45 rotate 0 0 S7 stroke grestore } bind def /D8 { gsave
translate 45 rotate 0 0 S8 stroke grestore } bind def /D9 { gsave translate
45 rotate 0 0 S9 stroke grestore } bind def /D10 { gsave translate
45 rotate 0 0 S10 stroke grestore } bind def /D11 { gsave translate
45 rotate 0 0 S11 stroke grestore } bind def /D12 { gsave translate
45 rotate 0 0 S12 stroke grestore } bind def /D13 { gsave translate
45 rotate 0 0 S13 stroke grestore } bind def /D14 { gsave translate
45 rotate 0 0 S14 stroke grestore } bind def /D15 { gsave translate
45 rotate 0 0 S15 stroke grestore } bind def /DiaE { stroke [] 0 setdash
vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt
V closepath stroke } def /BoxE { stroke [] 0 setdash exch hpt sub exch
vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V closepath
stroke } def /TriUE { stroke [] 0 setdash vpt 1.12 mul add M   hpt
neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath
stroke } def /TriDE { stroke [] 0 setdash vpt 1.12 mul sub M   hpt
neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
stroke } def /PentE { stroke [] 0 setdash gsave   translate 0 hpt M
4 {72 rotate 0 hpt L} repeat   closepath stroke grestore } def /CircE
{ stroke [] 0 setdash   hpt 0 360 arc stroke } def /Opaque { gsave
closepath 1 setgray fill grestore 0 setgray closepath } def /DiaW {
stroke [] 0 setdash vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt
vpt V hpt neg vpt V Opaque stroke } def /BoxW { stroke [] 0 setdash
exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2
neg 0 V Opaque stroke } def /TriUW { stroke [] 0 setdash vpt 1.12 mul
add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62
mul V Opaque stroke } def /TriDW { stroke [] 0 setdash vpt 1.12 mul
sub M   hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62
mul V Opaque stroke } def /PentW { stroke [] 0 setdash gsave   translate
0 hpt M 4 {72 rotate 0 hpt L} repeat   Opaque stroke grestore } def
/CircW { stroke [] 0 setdash   hpt 0 360 arc Opaque stroke } def /BoxFill
{ gsave Rec 1 setgray fill grestore } def /BoxColFill {   gsave Rec
  /Fillden exch def   currentrgbcolor   /ColB exch def /ColG exch def
/ColR exch def   /ColR ColR Fillden mul Fillden sub 1 add def   /ColG
ColG Fillden mul Fillden sub 1 add def   /ColB ColB Fillden mul Fillden
sub 1 add def   ColR ColG ColB setrgbcolor   fill grestore } def /PatternFill
{ gsave /PFa [ 9 2 roll ] def     PFa 0 get PFa 2 get 2 div add PFa
1 get PFa 3 get 2 div add translate     PFa 2 get -2 div PFa 3 get
-2 div PFa 2 get PFa 3 get Rec     gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth     /PFs PFa 2 get dup mul
PFa 3 get dup mul add sqrt def     0 0 M PFa 5 get rotate PFs -2 div
dup translate 0 1 PFs PFa 4 get div 1 add floor cvi { PFa 4 get mul
0 M 0 PFs V } for     0 PFa 6 get ne { 0 1 PFs PFa 4 get div 1 add
floor cvi { PFa 4 get mul 0 2 1 roll M PFs 0 V } for     } if     stroke
grestore } def /Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop end gnudict begin gsave 0 0 translate
0.100 0.100 scale 0 setgray newpath 1.000 UL LTb 2.000 UL LT7 350 310
M 3100 0 V 1.000 UL LTb 350 310 M 63 0 V 3037 0 R -63 0 V 1.000 UL
LTb 2.000 UL LT7 350 529 M 3100 0 V 1.000 UL LTb 350 529 M 63 0 V 3037
0 R -63 0 V 1.000 UL LTb 2.000 UL LT7 350 748 M 3100 0 V 1.000 UL LTb
350 748 M 63 0 V 3037 0 R -63 0 V 1.000 UL LTb 2.000 UL LT7 350 966
M 3100 0 V 1.000 UL LTb 350 966 M 63 0 V 3037 0 R -63 0 V 1.000 UL
LTb 2.000 UL LT7 350 1185 M 3100 0 V 1.000 UL LTb 350 1185 M 63 0 V
3037 0 R -63 0 V 1.000 UL LTb 2.000 UL LT7 350 1404 M 3100 0 V 1.000
UL LTb 350 1404 M 63 0 V 3037 0 R -63 0 V 1.000 UL LTb 2.000 UL LT7
350 1622 M 3100 0 V 1.000 UL LTb 350 1622 M 63 0 V 3037 0 R -63 0 V
1.000 UL LTb 2.000 UL LT7 350 1841 M 3100 0 V 1.000 UL LTb 350 1841
M 63 0 V 3037 0 R -63 0 V 1.000 UL LTb 2.000 UL LT7 350 2060 M 3100
0 V 1.000 UL LTb 350 2060 M 63 0 V 3037 0 R -63 0 V 1.000 UL LTb 2.000
UL LT7 350 310 M 0 1750 V 1.000 UL LTb 350 310 M 0 63 V 0 1687 R 0
-63 V 1.000 UL LTb 2.000 UL LT7 738 310 M 0 1750 V 1.000 UL LTb 738
310 M 0 63 V 0 1687 R 0 -63 V 1.000 UL LTb 2.000 UL LT7 1125 310 M
0 1750 V 1.000 UL LTb 1125 310 M 0 63 V 0 1687 R 0 -63 V 1.000 UL LTb
2.000 UL LT7 1513 310 M 0 1750 V 1.000 UL LTb 1513 310 M 0 63 V 0 1687
R 0 -63 V 1.000 UL LTb 2.000 UL LT7 1900 310 M 0 1750 V 1.000 UL LTb
1900 310 M 0 63 V 0 1687 R 0 -63 V 1.000 UL LTb 2.000 UL LT7 2288 310
M 0 1750 V 1.000 UL LTb 2288 310 M 0 63 V 0 1687 R 0 -63 V 1.000 UL
LTb 2.000 UL LT7 2675 310 M 0 1750 V 1.000 UL LTb 2675 310 M 0 63 V
0 1687 R 0 -63 V 1.000 UL LTb 2.000 UL LT7 3063 310 M 0 1750 V 1.000
UL LTb 3063 310 M 0 63 V 0 1687 R 0 -63 V 1.000 UL LTb 2.000 UL LT7
3450 310 M 0 1750 V 1.000 UL LTb 3450 310 M 0 63 V 0 1687 R 0 -63 V
1.000 UL LTb 1.000 UL LTb 350 310 M 3100 0 V 0 1750 V -3100 0 V 350
310 L LTb LTb 1.000 UP 3.000 UL LT0 533 310 M 18 0 V 19 0 V 20 1 V
19 0 V 19 0 V 19 1 V 20 0 V 19 2 V 19 1 V 19 2 V 20 1 V 1 -2 V 1 0
V 2 2 V 2 3 V 2 1 V 1 0 V 1 1 V 1 0 V 2 1 V 2 1 V 1 0 V 2 1 V 1 1 V
2 1 V 2 1 V 1 1 V 2 1 V 1 1 V 1 3 V 2 3 V 2 4 V 1 6 V 2 7 V 1 10 V
2 11 V 2 6 V 1 6 V 2 5 V 1 5 V 1 5 V 2 4 V 2 5 V 1 8 V 1 9 V 2 16 V
2 22 V 1 24 V 2 27 V 1 27 V 1 37 V 2 58 V 2 56 V 2 55 V 1 48 V 1 43
V 2 60 V 2 50 V 1 44 V 2 41 V 1 37 V 1 53 V 2 70 V 2 72 V 1 72 V 2
60 V 1 62 V 2 66 V 2 46 V 1 34 V 2 27 V 1 25 V 1 38 V 2 50 V 2 47 V
1 40 V 2 30 V 1 23 V 2 3 V 2 -18 V 1 -34 V 2 -39 V 1 -41 V 1 -65 V
2 -55 V 2 -49 V 1 -39 V 1 -31 V 2 -32 V 2 -30 V 1 -20 V 2 -15 V 1 -12
V 1 -11 V 2 -17 V 2 -14 V 2 -12 V 1 -10 V 1 -8 V 2 -9 V 2 -6 V 1 -3
V 2 -1 V 1 1 V stroke 886 1322 M 1 4 V 2 7 V 2 10 V 1 10 V 2 11 V 1
11 V 2 15 V 1 10 V 2 7 V 2 4 V 1 1 V 1 -2 V 2 -6 V 2 -8 V 1 -10 V 2
-8 V 1 -11 V 2 -14 V 1 -12 V 1 -5 V 4 -25 V 5 -25 V 4 -16 V 5 -12 V
5 -7 V 5 -6 V 5 -2 V 4 2 V 6 6 V 5 10 V 5 11 V 5 12 V 5 12 V 6 18 V
5 30 V 5 35 V 6 36 V 6 30 V 6 21 V 6 13 V 6 5 V 6 -2 V 6 -10 V 6 -20
V 7 -22 V 6 -19 V 6 -18 V 7 -14 V 7 -15 V 6 -14 V 7 -12 V 6 -10 V 7
-6 V 8 -1 V 7 5 V 6 7 V 7 7 V 8 6 V 8 2 V 7 -1 V 7 -1 V 8 1 V 8 4 V
7 6 V 8 8 V 8 8 V 8 5 V 8 -1 V 9 -7 V 8 -10 V 8 -12 V 9 -13 V 8 -12
V 8 -7 V 9 -1 V 9 9 V 9 10 V 8 13 V 9 9 V 9 6 V 9 0 V 9 -2 V 9 -2 V
9 0 V 10 2 V 9 3 V 9 3 V 10 2 V 10 0 V 9 -2 V 10 -5 V 10 -6 V 10 -9
V 10 -10 V 10 -10 V 10 -10 V 10 -9 V 11 -4 V 10 -2 V 10 2 V 10 4 V
11 6 V 11 6 V 11 6 V stroke 1555 1325 M 10 4 V 11 2 V 11 2 V 11 0 V
11 0 V 11 -1 V 11 -2 V 12 -2 V 11 -3 V 11 -3 V 12 -4 V 11 -3 V 12 -3
V 11 -3 V 12 -1 V 12 -1 V 12 -2 V 12 -2 V 12 -1 V 12 -2 V 12 -1 V 12
-1 V 13 0 V 12 1 V 12 0 V 14 1 V 12 1 V 13 0 V 13 0 V 12 -1 V 14 -2
V 12 -2 V 14 -3 V 13 -3 V 13 -4 V 13 -2 V 13 -2 V 14 -1 V 13 -1 V 14
3 V 13 -4 V 14 -1 V 14 0 V 14 0 V 14 0 V 13 0 V 15 1 V 14 0 V 14 0
V 14 -1 V 15 -1 V 13 -1 V 16 -1 V 14 -3 V 15 -2 V 14 -2 V 15 -2 V 15
-2 V 15 -1 V 15 -1 V 15 0 V 15 -1 V 16 -1 V 15 0 V 14 -1 V 16 -1 V
16 -1 V 15 0 V 16 -1 V 15 -2 V 15 1 V 17 0 V 15 -1 V 16 0 V 17 -1 V
16 -1 V 16 -1 V 15 -1 V 17 -1 V 16 -1 V 16 -1 V 17 -1 V 17 -1 V 17
-1 V 16 -1 V 16 0 V 17 -1 V 18 -1 V 16 -1 V 17 0 V 17 -1 V 18 -1 V
18 0 V 17 0 V 18 -1 V 17 0 V 18 -1 V 18 -1 V 19 -1 V 17 0 V 19 -1 V
18 -1 V 18 -1 V 19 0 V stroke 3058 1231 M 19 -1 V 18 -1 V 19 0 V 19
-1 V 18 0 V 19 -1 V 19 -1 V 19 0 V 19 -1 V 20 0 V 19 0 V 20 -1 V 19
-1 V 20 0 V 19 -1 V 20 0 V 19 -1 V 20 0 V 19 -1 V 20 -1 V 8 0 V 1.000
UL LTb 350 310 M 3100 0 V 0 1750 V -3100 0 V 350 310 L 1.000 UP stroke
grestore end showpage


@endspecial 2551 5198 a Fd(E)26 b Fa(\()p Fb(eV)p Fa(\))586
3800 y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg
exch translate
 586 3800 a 437 3764 a Fe(m)12 b Fa(\()p Fd(E)e
Fa(\))586 3800 y
 currentpoint grestore moveto
 586 3800 a 4482 5018 a Fb(7800)-752
b(7700)e(7600)h(7500)g(7400)g(7300)f(7200)i(7100)e(7000)647
2797 y(1.6)647 3060 y(1.4)647 3323 y(1.2)647 3585 y(1.0)647
3848 y(0.8)647 4110 y(0.6)647 4372 y(0.4)647 4635 y(0.2)647
4898 y(0.0)p Black Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
