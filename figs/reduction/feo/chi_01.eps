%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: _GP2PS_chi_01.dvi
%%CreationDate: Sun Jun 12 20:03:35 2011
%%BoundingBox: 117 289 464 499
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -q -Z -X 600 -Y 600 -o chi_01.eps
%+ _GP2PS_chi_01.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2011.06.12:2003
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (_GP2PS_chi_01.dvi)
@start end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black Black 324 3625 a @beginspecial
@setspecial
 /gnudict 256 dict def gnudict begin /Color true def /Blacktext true
def /Solid false def /Dashlength 1 def /Landscape false def /Level1
false def /Rounded false def /TransparentPatterns false def /gnulinewidth
12.500 def /userlinewidth gnulinewidth def /vshift -66 def /dl1 { 
 10.0 Dashlength mul mul   Rounded { currentlinewidth 0.75 mul sub
dup 0 le { pop 0.01 } if } if } def /dl2 {   10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if } def /hpt_ 31.5 def
/vpt_ 31.5 def /hpt hpt_ def /vpt vpt_ def Level1 {} { /SDict 10 dict
def systemdict /pdfmark known not {   userdict /pdfmark systemdict
/cleartomark get put } if SDict begin [   /Title (_GP2PS_chi_01_tmp.pstex)
  /Subject (gnuplot plot)   /Creator (gnuplot 4.2 patchlevel 5 )  
/Author (Matt Newville)   /CreationDate (Sun Jun 12 20:03:33 2011)
  /DOCINFO pdfmark end } ifelse /M {moveto} bind def /L {lineto} bind
def /R {rmoveto} bind def /V {rlineto} bind def /N {newpath moveto}
bind def /Z {closepath} bind def /C {setrgbcolor} bind def /f {rlineto
fill} bind def /vpt2 vpt 2 mul def /hpt2 hpt 2 mul def /Lshow {currentpoint
stroke M 0 vshift R Blacktext {gsave 0 setgray show grestore} {show}
ifelse} def /Rshow {currentpoint stroke M dup stringwidth pop neg vshift
R Blacktext {gsave 0 setgray show grestore} {show} ifelse} def /Cshow
{currentpoint stroke M dup stringwidth pop -2 div vshift R Blacktext
{gsave 0 setgray show grestore} {show} ifelse} def /UP {dup vpt_ mul
/vpt exch def hpt_ mul /hpt exch def   /hpt2 hpt 2 mul def /vpt2 vpt
2 mul def} def /DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def /BL
{stroke userlinewidth 2 mul setlinewidth Rounded {1 setlinejoin 1 setlinecap}
if} def /AL {stroke userlinewidth 2 div setlinewidth Rounded {1 setlinejoin
1 setlinecap} if} def /UL {dup gnulinewidth mul /userlinewidth exch
def dup 1 lt {pop 1} if 10 mul /udl exch def} def /PL {stroke userlinewidth
setlinewidth Rounded {1 setlinejoin 1 setlinecap} if} def /LCw {1 1
1} def /LCb {0 0 0} def /LCa {0 0 0} def /LC0 {1 0 0} def /LC1 {0 1
0} def /LC2 {0 0 1} def /LC3 {1 0 1} def /LC4 {0 1 1} def /LC5 {1 1
0} def /LC6 {0 0 0} def /LC7 {1 0.3 0} def /LC8 {0.5 0.5 0.5} def /LTw
{PL [] 1 setgray} def /LTb {BL [] LCb DL} def /LTa {AL [1 udl mul 2
udl mul] 0 setdash LCa setrgbcolor} def /LT0 { PL [] 0 0 1 DL } def
/LT1 { PL [] 1 0 0 DL } def /LT2 { PL [] 0 0 0 DL } def /LT3 { PL []
1 0 1 DL } def /LT4 { PL [] 0 0.5 0 DL } def /LT5 { PL [4 dl 3 dl]
0 0 1 DL } def /LT6 { PL [4 dl 2 dl] 1 0 0 DL } def /LT7 { PL [] 0.88
0.88 0.88 DL } def /LT8 { PL [4 dl 3 dl] 0 0 0 DL } def /Pnt {stroke
[] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def /Dia {stroke
[] 0 setdash 2 copy vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt
vpt V hpt neg vpt V closepath stroke   Pnt} def /Pls {stroke [] 0 setdash
vpt sub M 0 vpt2 V   currentpoint stroke M   hpt neg vpt neg R hpt2
0 V stroke  } def /Box {stroke [] 0 setdash 2 copy exch hpt sub exch
vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V closepath
stroke   Pnt} def /Crs {stroke [] 0 setdash exch hpt sub exch vpt add
M   hpt2 vpt2 neg V currentpoint stroke M   hpt2 neg 0 R hpt2 vpt2
V stroke} def /TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V
closepath stroke   Pnt} def /Star {2 copy Pls Crs} def /BoxF {stroke
[] 0 setdash exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0
vpt2 V   hpt2 neg 0 V closepath fill} def /TriUF {stroke [] 0 setdash
vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt
neg vpt 1.62 mul V closepath fill} def /TriD {stroke [] 0 setdash 2
copy vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul 0 V  
hpt neg vpt -1.62 mul V closepath stroke   Pnt} def /TriDF {stroke
[] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V   hpt 2 mul
0 V   hpt neg vpt -1.62 mul V closepath fill} def /DiaF {stroke []
0 setdash vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt
neg vpt V closepath fill} def /Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat   closepath stroke
grestore Pnt} def /PentF {stroke [] 0 setdash gsave   translate 0 hpt
M 4 {72 rotate 0 hpt L} repeat   closepath fill grestore} def /Circle
{stroke [] 0 setdash 2 copy   hpt 0 360 arc stroke Pnt} def /CircleF
{stroke [] 0 setdash hpt 0 360 arc fill} def /C0 {BL [] 0 setdash 2
copy moveto vpt 90 450 arc} bind def /C1 {BL [] 0 setdash 2 copy moveto
2 copy vpt 0 90 arc closepath fill vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto 2 copy vpt 90 180 arc closepath
fill vpt 0 360 arc closepath} bind def /C3 {BL [] 0 setdash 2 copy
moveto 2 copy vpt 0 180 arc closepath fill vpt 0 360 arc closepath}
bind def /C4 {BL [] 0 setdash 2 copy moveto 2 copy vpt 180 270 arc
closepath fill vpt 0 360 arc closepath} bind def /C5 {BL [] 0 setdash
2 copy moveto 2 copy vpt 0 90 arc 2 copy moveto 2 copy vpt 180 270
arc closepath fill vpt 0 360 arc} bind def /C6 {BL [] 0 setdash 2 copy
moveto 2 copy vpt 90 270 arc closepath fill vpt 0 360 arc closepath}
bind def /C7 {BL [] 0 setdash 2 copy moveto 2 copy vpt 0 270 arc closepath
fill vpt 0 360 arc closepath} bind def /C8 {BL [] 0 setdash 2 copy
moveto 2 copy vpt 270 360 arc closepath fill vpt 0 360 arc closepath}
bind def /C9 {BL [] 0 setdash 2 copy moveto 2 copy vpt 270 450 arc
closepath fill vpt 0 360 arc closepath} bind def /C10 {BL [] 0 setdash
2 copy 2 copy moveto vpt 270 360 arc closepath fill 2 copy moveto 2
copy vpt 90 180 arc closepath fill vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto 2 copy vpt 0 180 arc closepath
fill 2 copy moveto 2 copy vpt 270 360 arc closepath fill vpt 0 360
arc closepath} bind def /C12 {BL [] 0 setdash 2 copy moveto 2 copy
vpt 180 360 arc closepath fill vpt 0 360 arc closepath} bind def /C13
{BL [] 0 setdash 2 copy moveto 2 copy vpt 0 90 arc closepath fill 2
copy moveto 2 copy vpt 180 360 arc closepath fill vpt 0 360 arc closepath}
bind def /C14 {BL [] 0 setdash 2 copy moveto 2 copy vpt 90 360 arc
closepath fill vpt 0 360 arc} bind def /C15 {BL [] 0 setdash 2 copy
vpt 0 360 arc closepath fill vpt 0 360 arc closepath} bind def /Rec
{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto neg 0 rlineto
closepath} bind def /Square {dup Rec} bind def /Bsquare {vpt sub exch
vpt sub exch vpt2 Square} bind def /S0 {BL [] 0 setdash 2 copy moveto
0 vpt rlineto BL Bsquare} bind def /S1 {BL [] 0 setdash 2 copy vpt
Square fill Bsquare} bind def /S2 {BL [] 0 setdash 2 copy exch vpt
sub exch vpt Square fill Bsquare} bind def /S3 {BL [] 0 setdash 2 copy
exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def /S4 {BL [] 0
setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind
def /S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill exch vpt sub
exch vpt sub vpt Square fill Bsquare} bind def /S6 {BL [] 0 setdash
2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec
fill 2 copy vpt Square fill Bsquare} bind def /S8 {BL [] 0 setdash
2 copy vpt sub vpt Square fill Bsquare} bind def /S9 {BL [] 0 setdash
2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def /S10 {BL [] 0 setdash
2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square
fill Bsquare} bind def /S11 {BL [] 0 setdash 2 copy vpt sub vpt Square
fill 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def /S12
{BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
Bsquare} bind def /S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt
sub vpt2 vpt Rec fill 2 copy vpt Square fill Bsquare} bind def /S14
{BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
2 copy exch vpt sub exch vpt Square fill Bsquare} bind def /S15 {BL
[] 0 setdash 2 copy Bsquare fill Bsquare} bind def /D0 {gsave translate
45 rotate 0 0 S0 stroke grestore} bind def /D1 {gsave translate 45
rotate 0 0 S1 stroke grestore} bind def /D2 {gsave translate 45 rotate
0 0 S2 stroke grestore} bind def /D3 {gsave translate 45 rotate 0 0
S3 stroke grestore} bind def /D4 {gsave translate 45 rotate 0 0 S4
stroke grestore} bind def /D5 {gsave translate 45 rotate 0 0 S5 stroke
grestore} bind def /D6 {gsave translate 45 rotate 0 0 S6 stroke grestore}
bind def /D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind
def /D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def /D10
{gsave translate 45 rotate 0 0 S10 stroke grestore} bind def /D11 {gsave
translate 45 rotate 0 0 S11 stroke grestore} bind def /D12 {gsave translate
45 rotate 0 0 S12 stroke grestore} bind def /D13 {gsave translate 45
rotate 0 0 S13 stroke grestore} bind def /D14 {gsave translate 45 rotate
0 0 S14 stroke grestore} bind def /D15 {gsave translate 45 rotate 0
0 S15 stroke grestore} bind def /DiaE {stroke [] 0 setdash vpt add
M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath
stroke} def /BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62
mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul
V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath stroke} def /PentE
{stroke [] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L}
repeat   closepath stroke grestore} def /CircE {stroke [] 0 setdash
  hpt 0 360 arc stroke} def /Opaque {gsave closepath 1 setgray fill
grestore 0 setgray closepath} def /DiaW {stroke [] 0 setdash vpt add
M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V Opaque
stroke} def /BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62
mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V Opaque stroke} def /TriDW
{stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg vpt 1.62 mul V  
hpt 2 mul 0 V   hpt neg vpt -1.62 mul V Opaque stroke} def /PentW {stroke
[] 0 setdash gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def /CircW {stroke [] 0 setdash   hpt 0 360
arc Opaque stroke} def /BoxFill {gsave Rec 1 setgray fill grestore}
def /Density {   /Fillden exch def   currentrgbcolor   /ColB exch def
/ColG exch def /ColR exch def   /ColR ColR Fillden mul Fillden sub
1 add def   /ColG ColG Fillden mul Fillden sub 1 add def   /ColB ColB
Fillden mul Fillden sub 1 add def   ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def /PolyFill {gsave Density fill
grestore grestore} def /h {rlineto rlineto rlineto gsave closepath
fill grestore} bind def /PatternFill {gsave /PFa [ 9 2 roll ] def 
 PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec   gsave
1 setgray fill grestore clip   currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def   0 0 M PFa
5 get rotate PFs -2 div dup translate   0 1 PFs PFa 4 get div 1 add
floor cvi {PFa 4 get mul 0 M 0 PFs V} for   0 PFa 6 get ne { 0 1 PFs
PFa 4 get div 1 add floor cvi {PFa 4 get mul 0 2 1 roll M PFs 0 V}
for  } if   stroke grestore} def /languagelevel where  {pop languagelevel}
{1} ifelse  2 lt {/InterpretLevel1 true def} {/InterpretLevel1 Level1
def}  ifelse /Level2PatternFill { /Tile8x8 {/PaintType 2 /PatternType
1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8} bind def /KeepColor
{currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def << Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} >>
matrix makepattern /Pat1 exch def << Tile8x8  /PaintProc {0.5 setlinewidth
pop 0 0 M 8 8 L 0 8 M 8 0 L stroke 0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern /Pat2 exch def << Tile8x8  /PaintProc {0.5 setlinewidth
pop 0 0 M 0 8 L 8 8 L 8 0 L 0 0 L fill} >> matrix makepattern /Pat3
exch def << Tile8x8  /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
0 12 M 12 0 L stroke} >> matrix makepattern /Pat4 exch def << Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L 0 -4 M 12 8 L stroke}
>> matrix makepattern /Pat5 exch def << Tile8x8  /PaintProc {0.5 setlinewidth
pop -2 8 M 4 -4 L 0 12 M 8 -4 L 4 12 M 10 0 L stroke} >> matrix makepattern
/Pat6 exch def << Tile8x8  /PaintProc {0.5 setlinewidth pop -2 0 M
4 12 L 0 -4 M 8 12 L 4 -4 M 10 8 L stroke} >> matrix makepattern /Pat7
exch def << Tile8x8  /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
12 0 M -4 8 L 12 4 M 0 10 L stroke} >> matrix makepattern /Pat8 exch
def << Tile8x8  /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L -4 0
M 12 8 L -4 4 M 8 10 L stroke} >> matrix makepattern /Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def /Pattern2
{PatternBgnd KeepColor Pat2 setpattern} bind def /Pattern3 {PatternBgnd
KeepColor Pat3 setpattern} bind def /Pattern4 {PatternBgnd KeepColor
Landscape {Pat5} {Pat4} ifelse setpattern} bind def /Pattern5 {PatternBgnd
KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def /Pattern6
{PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind
def /Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse
setpattern} bind def } def /PatternBgnd {   TransparentPatterns {}
{gsave 1 setgray fill grestore} ifelse } def /Level1PatternFill { /Pattern1
{0.250 Density} bind def /Pattern2 {0.500 Density} bind def /Pattern3
{0.750 Density} bind def /Pattern4 {0.125 Density} bind def /Pattern5
{0.375 Density} bind def /Pattern6 {0.625 Density} bind def /Pattern7
{0.875 Density} bind def } def Level1 {Level1PatternFill} {Level2PatternFill}
ifelse /Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont dup
length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall currentdict
end definefont pop end gnudict begin gsave 0 0 translate 0.050 0.050
scale 0 setgray newpath 1.000 UL LTb 1.000 UP 1.000 UL LTb 3.000 UL
LT0 250 895 M 24 103 V 24 25 V 24 45 V 24 69 V 24 96 V 24 119 V 24
131 V 23 146 V 24 148 V 24 143 V 24 140 V 24 134 V 24 126 V 24 118
V 24 115 V 24 122 V 24 155 V 24 201 V 24 184 V 24 207 V 24 251 V 23
244 V 24 168 V 24 35 V 24 -107 V 24 -223 V 24 -357 V 24 -486 V 24 -377
V 24 -385 V 24 -329 V 24 -241 V 24 -180 V 24 -136 V 24 -150 V 23 -123
V 24 -125 V 24 -98 V 24 -59 V 24 -16 V 24 43 V 24 91 V 24 144 V 24
132 V 24 74 V 24 -5 V 24 -85 V 24 -145 V 24 -158 V 23 -146 V 24 -130
V 24 -107 V 24 -80 V 24 -55 V 24 -43 V 24 -33 V 24 -20 V 24 -5 V 24
14 V 24 33 V 24 50 V 24 51 V 24 56 V 23 61 V 24 75 V 24 120 V 24 175
V 24 190 V 24 169 V 24 148 V 24 119 V 24 73 V 24 39 V 24 4 V 24 -37
V 24 -78 V 24 -105 V 23 -112 V 24 -104 V 24 -92 V 24 -71 V 24 -74 V
24 -72 V 24 -67 V 24 -58 V 24 -40 V 24 -16 V 24 12 V 24 33 V 24 44
V 24 42 V 23 30 V 24 10 V 24 -3 V 24 -3 V 24 6 V 24 18 V 24 33 V 24
45 V 24 49 V 24 40 V 24 14 V 24 -15 V 24 -39 V stroke 2739 967 M 24
-56 V 23 -63 V 24 -66 V 24 -61 V 24 -38 V 24 -5 V 24 44 V 24 57 V 24
72 V 24 66 V 24 43 V 24 16 V 24 -1 V 24 -7 V 24 -3 V 23 9 V 24 18 V
24 22 V 24 18 V 24 12 V 24 5 V 24 -9 V 24 -20 V 24 -31 V 24 -44 V 24
-48 V 24 -54 V 24 -50 V 24 -44 V 23 -25 V 24 -6 V 24 8 V 24 27 V 24
35 V 24 38 V 24 38 V 24 34 V 24 26 V 24 17 V 24 12 V 24 7 V 24 3 V
23 -1 V 24 -5 V 24 -8 V 24 -12 V 24 -13 V 24 -14 V 24 -13 V 24 -11
V 24 -6 V 24 -1 V 24 0 V 24 -2 V 24 -4 V 24 -4 V 24 -3 V 23 -1 V 24
5 V 24 4 V 24 8 V 24 9 V 24 13 V 24 11 V 24 8 V 24 5 V 24 2 V 24 -4
V 24 -7 V 24 -11 V 24 -11 V 23 -14 V 24 -10 V 24 -5 V 24 -3 V 24 0
V 24 17 V 24 -2 V 24 -7 V 24 4 V 24 6 V 24 6 V 24 7 V 24 7 V 23 8 V
24 5 V 24 3 V 24 2 V 24 -1 V 24 -1 V 24 -6 V 24 -8 V 24 -8 V 24 -7
V 24 -5 V 24 -3 V 24 0 V 24 1 V 24 2 V 23 1 V 24 1 V 24 0 V 24 0 V
24 1 V stroke 5227 888 M 24 1 V 24 2 V 24 -2 V 24 0 V 24 9 V 24 2 V
24 2 V 24 3 V 24 -1 V 23 -1 V 24 -2 V 24 -2 V 24 -2 V 24 -1 V 24 -1
V 24 -1 V 24 -2 V 24 0 V 24 -1 V 24 -1 V 24 1 V 24 0 V 24 0 V 23 1
V 24 0 V 24 0 V 24 3 V 24 1 V 24 1 V 24 1 V 24 0 V 24 -1 V 24 0 V 24
-1 V 24 0 V 24 -1 V 24 -1 V 23 1 V 24 -1 V 24 -1 V 24 0 V 24 0 V 24
0 V 24 0 V 24 0 V 24 0 V 24 1 V 24 1 V 24 2 V 24 0 V 23 0 V 24 0 V
24 -1 V 24 0 V 24 0 V 24 -1 V 24 0 V 24 0 V 24 0 V 24 0 V 24 0 V 24
-2 V 24 0 V 24 1 V 24 0 V 23 -1 V 24 1 V 24 0 V 24 -1 V 24 1 V 24 0
V 24 1 V 1.000 UP stroke 1.000 UL LTb stroke grestore end showpage
 
@endspecial Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
